{
        "width": 400,
        "height": 600,
        "signals": [
            {"name": "w","init": 400},
            {"name": "h","init": 600},
            {
                "name": "brush_start",
                "init": {"x": 0, "y": 0},
                "streams": [{
                    "type": "mousedown",
                    "expr": "{x: clamp(eventX(), 0, w), y: clamp(eventY(), 0, h)}"
                }]
            },
            {
                "name": "brush_end",
                "init": {"x": 0, "y": 0},
                "streams": [{
                    "type": "mousedown, [mousedown, window:mouseup] > window:mousemove",
                    "expr": "{x: clamp(eventX(), 0, w), y: clamp(eventY(), 0, h)}"
                }]
            },
            {
                "name": "brush_startx",
                "init": 0,
                "streams": [
                    {
                        "type": "mousedown",
                        "expr": "clamp(eventX(), 0, w)",
                        "scale": {"name": "x", "invert":"true"}
                    }
                ]
            },
            {
                "name": "brush_starty",
                "init": 0,
                "streams": [
                    {
                        "type": "mousedown",
                        "expr": "clamp(eventY(), 0, h)",
                        "scale": {"name": "y", "invert":"true"}
                    }
                ]
            },
            {
                "name": "brush_endx",
                "init": 0,
                "streams": [
                    {
                        "type": "mousedown, [mousedown, window:mouseup] > window:mousemove",
                        "expr": "clamp(eventX(), 0, w)",
                        "scale": {"name": "x", "invert":"true"}
                    }
                ]
            },
            {
                "name": "brush_endy",
                "init": 0,
                "streams": [
                    {
                        "type": "mousedown, [mousedown, window:mouseup] > window:mousemove",
                        "expr": "clamp(eventY(), 0, h)",
                        "scale": {"name": "y", "invert":"true"}
                    }
                ]
            },
            {
                "name": "brush_min_x",
                "init": 0,
                "expr": "min(brush_startx,brush_endx)"
            },
            {
                "name": "brush_min_y",
                "init": 0,
                "expr": "min(brush_starty,brush_endy)"
            },
            {
                "name": "brush_max_x",
                "init": 0,
                "expr": "max(brush_startx,brush_endx)"
            },
            {
                "name": "brush_max_y",
                "init": 0,
                "expr": "max(brush_starty,brush_endy)"
            }
        ],
        "predicates": [
            {
                "name": "xRange",
                "type": "in",
                "item": {"arg": "x"},
                "range": [
                    {"signal": "brush_min_x"},
                    {"signal": "brush_max_x"}
                ]
            },
            {
                "name": "yRange",
                "type": "in",
                "item": {"arg": "y"},
                "range": [
                    {"signal": "brush_min_y"},
                    {"signal": "brush_max_y"}
                ]
            },
            {
                "name": "inRange",
                "type": "&&",
                "operands": [{"predicate": "xRange"},{"predicate": "yRange"}]
            }
        ],
        "data": [{"name": "iris",
            "url": "https://raw.githubusercontent.com/arvindkgs/share/master/iris.json"
			},
            {
                "name": "selectedPoints",
                "source": "iris",
                "transform": [
                    {
                        "type": "filter",
                        "test": "datum.Revenue >= brush_min_x && datum.Revenue < brush_max_x && datum.EBT_Margin_Percentage >= brush_min_y && datum.EBT_Margin_Percentage < brush_max_y"
                    },
                    {
                        "type": "aggregate",
                        "summarize": [
                            {"field": "Revenue", "ops": ["mean"], "as": ["mean"]}
                        ]
                    }
                ]
            }],
        "scales": [
            {
                "name": "x",
                "type": "linear",
                "domain": {"data": "iris","field": "Revenue"},
                "range": "width",
                "zero": false
            },
            {
                "name": "y",
                "type": "linear",
                "domain": {"data": "iris","field": "EBT_Margin_Percentage"},
                "range": "height",
                "nice": true,
                "zero": false
            },
            {
                "name": "c",
                "type": "ordinal",
                "domain": {"data": "iris","field": "species"},
                "range": "category10"
            }
        ],
        "axes": [
            {
                "type": "x",
                "scale": "x",
                "offset": 5,
                "ticks": 5,
                "title": "Sepal Width"
            },
            {
                "type": "y",
                "scale": "y",
                "offset": 5,
                "ticks": 5,
                "title": "Petal Length"
            }
        ],
        "marks": [
            {
                "type": "symbol",
                "from": {"data": "iris"},
                "properties": {
                    "enter": {
                        "x": {"scale": "x","field": "Revenue"},
                        "y": {"scale": "y","field": "EBT_Margin_Percentage"},
                        "fill": {"scale": "c","field": "species"},
                        "fillOpacity": {"value": 0.5},
                        "size": {"value": 100}
                    },
                    "update": {
                        "fill": {
                            "rule": [
                                {
                                    "predicate": {
                                        "name": "inRange",
                                        "x": {"field": "Revenue"},
                                        "y": {"field": "EBT_Margin_Percentage"}
                                    },
                                    "scale": "c",
                                    "field": "species"
                                },
                                {"value": "grey"}
                            ]
                        }
                    }
                }
            },
            {
                "type": "rule",
                "from": {
                    "data": "selectedPoints"
                },
                "properties": {
                    "update": {
                        "stroke": {"value": "#252"},
                        "strokeWidth": {"value": 1},
                        "strokeDash": {"value": [10,5]},
                        "x": {"scale": "x","field": "mean"},
                        "y": {"value": 0},
                        "y2": {"field": {"group": "height"}}
                    }
                }
            },
            {
                "type": "rule",
                "from": {
                    "data": "iris",
                    "transform": [
                        {
                            "type": "aggregate",
                            "summarize": [
                                {
                                    "field": "Revenue",
                                    "ops": ["mean"],
                                    "as": ["mean"]
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "update": {
                        "stroke": {"value": "#001"},
                        "strokeWidth": {"value": 1},
                        "strokeDash": {"value": [10,5]},
                        "x": {"scale": "x","field": "mean"},
                        "y": {"value": 0},
                        "y2": {"field": {"group": "height"}}
                    }
                }
            },
            {
                "type": "rect",
                "properties": {
                    "enter": {
                        "fill": {"value": "grey"},
                        "fillOpacity": {"value": 0.2}
                    },
                    "update": {
                        "x": {"signal": "brush_start.x"},
                        "x2": {"signal": "brush_end.x"},
                        "y": {"signal": "brush_start.y"},
                        "y2": {"signal": "brush_end.y"}
                    }
                }
            }
        ]
    }
